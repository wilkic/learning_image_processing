
#-2 - Buy a pi and a 32 gb SD card, download OS for card:
 http://downloads.raspberrypi.org/raspbian/images/
 * Buster for pi4
 http://downloads.raspberrypi.org/raspbian/images/raspbian-2020-02-14/
 * Stretch for pi3
 http://downloads.raspberrypi.org/raspbian/images/raspbian-2019-04-09/



#-1 - Write image to SD card:
{{{
sudo dd bs=4M if=2019-04-08-raspbian-stretch.img of=/dev/sdb1 conv=fsync
}}}
 * change .img to unzipped image file
 * change /dev/sdb1 to wherever sd card is
  * should NOT be mounted
  * can find with this:
{{{
sudo fdisk -l
}}}


#0 - Plug in SD to pi, boot normally and connect to internet (eth or wifi)

#0.5 - apt update, apt upgrade

#1 - Install vim - vi is unbearable


#2 - Enable ssh
 * sudo raspi-config
 * -> advanced -> ssh -> enable
 * OR MAYBE -> Interfacing Options -> ssh -> enable
 * sudo raspi-config
 * -> change password
 * WRITE IT DOWN

#3 - Install isc-dhcp-server

#4 - Connect directly to pi over ethernet

 * connect raspberry pi to laptop with Ethernet.
 * Go the edit connection setting.
 * Navigate to ipv4 option. Select method : shared to other computer.
  * ensure connection is enabled
 * Then open command prompt and type command >"cat /var/lib/misc/dnsmasq.leases". You will get raspberry pi Ip from that.
 * then open command prompt and type: ssh pi@"ip of raspberry pi"


#5 - Set a static ip

Old pi instructions:

 * vim /etc/network/interfaces
{{{
<<<
iface eth0 inet manual
<<<
>>>
auto eth0

iface eth0 inet static
 address 10.10.110.1
 netmask 255.255.255.0
 broadcast 10.10.110.255
 gateway 10.10.110.254
>>>
}}}

Old pi vs new pi details:
https://raspberrypi.stackexchange.com/questions/39785/differences-between-etc-dhcpcd-conf-and-etc-network-interfaces

New pi instructions:

Attempt1:

add this to /etc/dhcpcd.conf:
{{{
interface eth0
static ip_address=10.10.110.1
static routers=10.10.110.1
static domain_name_servers=10.10.110.254
}}}

Attempt2:

add this to /etc/dhcpcd.conf:
{{{
interface eth0
static ip_address=10.10.110.1
static domain_name_servers=10.10.110.254
static routers=10.10.110.254
}}}



#6 - Configure dhcp server
 * sudo vim /etc/dhcp/dhcpd.conf
>>>
subnet 10.10.110.0 netmask 255.255.255.0 {
  interface eth0;
  range 10.10.110.2 10.10.110.50;
  option subnet-mask 255.255.255.0;
  option broadcast-address 10.10.110.255;
}
<<<

#7 - Set the interface through which to send out IPs
 * sudo vim /etc/default/isc-dhcp-server
>>>
INTERFACESv4="eth0"
#INTERFACESv6=""
<<<

#7.5 - force ip address (in case you haven't connected over ethernet)
 * sudo ifconfig eth0 10.10.110.1


#8 - Test
 * pi:
  * sudo service isc-dhcp-server restart
 * laptop:
  * disable laptop ethernet connection
  * Go the edit connection setting.
  * Navigate to ipv4 option. Select method : dhcp
  * enable ethernet connection


#9 - Enable isc-dhcp-server to start at boot
 * add a delay, and start isc-dhcp-server in /etc/rc.local
   (at end, before the "exit 0"
>>>
sleep 60
/etc/init.d/isc-dhcp-server start
<<<
 * Might be needed, why not just do it:
$ sudo systemctl enable isc-dhcp-server


#9.5 - Test Reboot
 * sudo reboot
 * ssh into pi once you've got an ip

#9.5 - add laptop as static ip
 * vim /etc/dhcp/dhcpd.conf

host ccw_laptop {
    option host-name "ccw";
    hardware ethernet 10:dd:b1:af:cd:7e;
    fixed-address 10.10.110.200;
}

#10 - Move over scripts and update as needed
 * cam_passes.sh needs at least the right camera numbers
  * make sure it's got a while loop
 * for camrunscript.sh, set up a cronjob to run it every N mins:
$ crontab -e
>>>
*/N * * * * /home/pi/remote_cam_pass/camrunscript.sh
<<<


#11 - Install cameras
 * Get their ip addrs
  * cat /var/lib/dhcp/dhcpd.leases
 * OR
  * set their ip addrs in /etc/dhcp/dhcpd.conf
   * example:
host cam_01 {
    option host-name "Camera01";
    hardware ethernet 00:fc:01:fd:a6:61;
    fixed-address 10.10.110.101;
}



#12 - If using a specific DNS
 * vim /etc/resolvconf.conf
{{{
# Configuration for resolvconf(8)
# See resolvconf.conf(5) for details

resolv_conf=/etc/resolv.conf
# If you run a local name server, you should uncomment the below line and
# configure your subscribers configuration files below.
#name_servers=127.0.0.1
name_servers=10.10.110.254

# Mirror the Debian package defaults for the below resolvers
# so that resolvconf integrates seemlessly.
dnsmasq_resolv=/var/run/dnsmasq/resolv.conf
pdnsd_conf=/etc/pdnsd.conf
unbound_conf=/var/cache/unbound/resolvconf_resolvers.conf
}}}
  * change name_servers to the desired local DNS address


